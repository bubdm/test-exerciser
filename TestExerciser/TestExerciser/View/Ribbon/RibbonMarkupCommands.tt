<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ assembly name="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace DesignTE.View.Ribbon
{
    public enum RibbonMarkupCommands : uint
    {
<#
	string xml = File.ReadAllText(this.Host.ResolvePath("RibbonMarkup.xml"));
	xml = xml.Replace(@"xmlns='http://schemas.microsoft.com/windows/2009/Ribbon'", "");
	XElement root = XElement.Parse(xml);
	IEnumerable<XElement> commands = 
	from el in root.Descendants("Command")
	where el.Attribute("Id") != null
	select el;		

	foreach(XElement el in commands)  
    { #>
		<#= el.Attribute("Name").Value #> = <#= el.Attribute("Id").Value #>,		
<#	} #>
	}
}
